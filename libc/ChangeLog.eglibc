2007-02-05  Jim Blandy  <jimb@codesourcery.com>

	Add support for cross-testing.

	Remove Make conditionals that disable running tests or generating
	test input files when cross-compiling.
	* Rules: Disable conditionals.
	* stdlib/Makefile: Same.
	* libio/Makefile: Same.
	* intl/Makefile: Same.
	* iconvdata/Makefile: Same.
	* localedata/Makefile: Same.
	* catgets/Makefile: Same.
	* misc/Makefile: Same.
	* posix/Makefile: Same.
	* string/Makefile: Same.
	* stdio-common/Makefile: Same.
	* resolv/Makefile: Same.
	* iconv/Makefile: Same.
	* grp/Makefile: Same.
	* elf/Makefile: Same.
	* malloc/Makefile: Same.
	* io/Makefile: Same.

	Where tests run binaries, have them use cross-test-wrapper, if
	set.
	* Makeconfig (run-program-prefix): Split this into two pieces:
	(run-via-rtld-prefix): Prefix to run something via the dynamic linker.
	(run-program-prefix): Prefix to run something via the
	cross-testing wrapper and the dynamic linker.
	(built-program-command): Run the rule's second dependency, using the
	cross-test-wrapper and dynamic linker.
	(local-built-program-cmd): Like built-program-command, but don't
	use cross-test-wrapper.
	* intl/Makefile: Pass cross-test-wrapper to scripts.
	* intl/tst-codeset.sh, intl/tst-gettext.sh, intl/tst-gettext2.sh:
	* intl/tst-gettext3.sh, intl/tst-translit.sh: Expect and use wrapper.
	* iconvdata/Makefile: Pass cross-test-wrapper to scripts.
	* iconvdata/run-iconv-test.sh, iconvdata/tst-table.sh:
	* iconvdata/tst-tables.sh: Expect and use wrapper.
	* posix/Makefile: Pass cross-test-wrapper to scripts.  Pass
	local-built-program-command to tests which run subprograms.
	* posix/tst-getconf.sh, posix/globtest.sh:
	* posix/workexp-tst.sh: Expect and use wrapper.
	* grp/Makefile: Pass cross-test-wrapper to scripts.
	* grp/tst-fgetgrent.sh: Expect and use wrapper.
	* elf/Makefile: Pass cross-test-wrapper to scripts.  Use
	cross-test-wrapper to run binaries.  Pass
	local-built-program-command to tests which run subprograms.
	* elf/tst-pathopt.sh: Expect and use wrapper.
	* malloc/Makefile: Pass cross-test-wrapper to scripts.
	* malloc/tst-mtrace.sh: Expect and use wrapper.
	* io/Makefile: Pass cross-test-wrapper to scripts.
	* io/ftwtest-sh: Expect and use wrapper.
	* nptl/Makefile: Pass cross-test-wrapper to scripts.  Pass
	local-built-program-command to tests which run subprograms.
	* nptl/tst-tls6.sh: Expect and use wrapper.
	* rt/makefile (tst-mqueue7-ARGS): Pass local-built-program-command.

	Make sure cross-testing wrappers don't steal input from test
	script loops.

	* iconvdata/run-iconv-test.sh: Use non-stdin file descriptor for
	while loop input.
	* iconvdata/tst-tables.sh: Redirect loop body input from /dev/null.
	* localedata/tst-rpmatch.sh, localedata/tst-fmon.sh: Same.
	* localedata/tst-numeric.sh: Same.
	* posix/tst-getconf.sh: Same.

	* localedata/tst-wctype.sh: Take the command to run as an
	argument, as passed by the Makefile, not run_program_prefix.

	* io/Makefile ($(objpfx)/ftwtest.out): If cross-testing, use build
	tree for temporary directory.

	* localedata/Makefile ($(addprefix $(objpfx),$(CTYPE_FILES))): Use
	cross-localedef program, if specified.

	* scripts/cross-test-ssh.sh: New file: sample cross-test wrapper.

2007-02-05  Joseph Myers  <joseph@codesourcery.com>

	* soft-fp/op-common.h, sysdeps/ieee754/ldbl-128ibm/s_copysignl.c,
	sysdeps/ieee754/ldbl-128ibm/s_fabsl.c: Resync with trunk.
	* soft-fp/fenv_libc.h: Remove.

2007-02-02  Jim Blandy  <jimb@codesourcery.com>

	Use the host nm in NPTL tests.
	* aclocal.m4 (LIBC_PROG_BINUTILS): Find path to 'nm', too.
        * configure: Regenerated.
	* config.make.in: Accept 'nm' path from configure script.
	* nptl/Makefile (tst-cancel-wrappers.out): Pass 'nm' path to test
	script.
	* nptl/tst-cancel-wrappers.sh: Use the 'nm' given in arguments.

2007-01-25  Jim Blandy  <jimb@codesourcery.com>

	* Makerules: Allow option groups to control xtests as well.
	* option-groups.mak: Initialize xtests-y.

2007-01-09  Joseph Myers  <joseph@codesourcery.com>

	Backport from trunk:
	2006-12-14  Jakub Jelinek  <jakub@redhat.com>
	* misc/tst-pselect.c (do_test): Fix sigblock argument.
	2006-12-14  Ulrich Drepper  <drepper@redhat.com>
	* misc/tst-pselect.c (do_test): Make sure the helper process is
	terminating when the test is aborted.

2006-12-26  Jim Blandy  <jimb@codesourcery.com>

        * option-groups.def, option-groups.defaults (OPTION_EGLIBC_LOCALES):
        New option group.
        * localedata/Makefile: Trim locale lists if
        OPTION_EGLIBC_LOCALES is not enabled.

        * option-groups.mak: Allow includer to override the option
        group config file name.

2006-12-08  Jim Blandy  <jimb@codesourcery.com>

	Add rudimentary option group support.
	* option-groups.mak, option-groups.def, option-groups.defaults:
        New files.
	* Makerules: Add contents of enabled option groups to the values
	of the variables 'routines', 'others', 'install-bin',
	'install-sbin', 'extra-objs', 'tests', and 'test-srcs'.
	* catgets/Makefile: Add the catgets directory's routines and
	programs to the OPTION_EGLIBC_CATGETS option group.

2006-12-07  Joseph Myers  <joseph@codesourcery.com>

	* misc/tst-efgcvt.c (ecvt_tests): Disable subnormal test for E500
	double.
	* sysdeps/powerpc/bits/fenv.h: Include E500 definitions.  Based on
	SPE add-on by Aldy Hernandez.
	* sysdeps/powerpc/fpu/bits/fenvinline.h: Change _SOFT_FLOAT to
	__NO_FPRS__.
	* sysdeps/powerpc/fpu/bits/mathinline.h: Likewise.
	* sysdeps/powerpc/fpu/fpu_control.h: Include soft-float and E500
	definitions.  Based on SPE add-on by Aldy Hernandez.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/getcontext-common.S:
	If __CONTEXT_EXTRA defined, include <getcontext-extra.S>.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/setcontext-common.S:
	If __CONTEXT_EXTRA defined, include <setcontext-extra.S>.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/swapcontext-common.S:
	If __CONTEXT_EXTRA defined, include <getcontext-extra.S> and
	<setcontext-extra.S>.

2006-11-13  Joseph S. Myers  <joseph@codesourcery.com>

	* sysdeps/alpha/bits/mathdef.h (float_t): Always define as float.
	* sysdeps/powerpc/bits/mathdef.h: Likewise.
	* sysdeps/sh/sh4/bits/mathdef.h: Likewise.
	* sysdeps/sparc/bits/mathdef.h: Likewise.

2006-11-09  Steven Munroe  <sjmunroe@us.ibm.com>
	    Joe Kerian  <jkerian@us.us.ibm.com>

	[BZ #2749]
	* soft-fp/fenv_libc.h: New file.
	* soft-fp/op-common.h (_FP_OVERFLOW_SEMIRAW): Always set inexact 
	and overflow for infinity.
	(_FP_PACK_SEMIRAW): Update comment.  Do not round if NaN.
	* soft-fp/op-4.h (__FP_FRAC_SUB_3, __FP_FRAC_SUB_4): Correct borrow
	handling for high words.
	* sysdeps/ieee754/ldbl-128ibm/s_copysignl.c: 
	Include <math_ldbl_opt.h>.
	Remove weak_alias.  Use long_double_symbol macro.
	(__copysignl): Use signbit() for comparison.
	* sysdeps/ieee754/ldbl-128ibm/s_fabsl.c:

	[BZ #2423, #2749]
	* sysdeps/ieee754/ldbl-128ibm/s_ceill.c: Don't include <fenv_libc.h>.
	(__ceill): Remove calls to fegetround(), fesetround().
	* sysdeps/ieee754/ldbl-128ibm/s_floorl.c: Likewise.
	* sysdeps/ieee754/ldbl-128ibm/s_roundl.c: Likewise.
	* sysdeps/ieee754/ldbl-128ibm/s_truncl.c: Likewise.

2006-09-07  Richard Sandiford  <richard@codesourcery.com>

	* sysdeps/unix/sysv/linux/getcwd.c: Include sys/param.h.

2006-09-07  Richard Sandiford  <richard@codesourcery.com>

	* locale/programs/ld-collate.c (obstack_int32_grow): Only use
	obstack_int_grow if the object size is int-aligned.
	(obstack_int32_grow_fast): Likewise obstack_int_grow_fast.
	(new_element): Handle <U0000> as a single character.
	(collate_output): Use uint32_align_mask.  Use obstack_int32_grow_fast
	rather than obstack_int32_grow for an int32 that has already been
	allocated.
	* locale/programs/localedef.c (OPT_UINT32_ALIGN): New macro.
	(options): Add --uint32-align.
	(parse_opt): Handle it.
	* locale/programs/locfile.c (uint32_align_mask): New variable.
	* locale/programs/locfile.h (uint32_align_mask): Declare.

2006-09-07  Richard Sandiford  <richard@codesourcery.com>

	* argp/argp-help.c (__argp_short_program_name): Protect function name
	from macro expansion.
	* argp/argp-namefrob.h: Don't include mempcpy.h, strcase.h,
	strchrnul.h and strndup.h
	* locale/programs/charmap-dir.c: Don't include spawn.h if
	NO_COMPRESS is defined.
	(fopen_uncompressed): Suppress if NO_COMPRESS is defined.
	(charmap_open): Guard callers in the same way.
	* locale/programs/ld-collate.c (new_element): Call wcslen_uint32
	instead of wcslen.
	(collate_finish, collate_output): Likewise wmemcmp_uint32/wmemcmp.
	* locale/programs/ld-ctype.c (find_idx): Fix prototype.
	(ctype_startup): Fix cast.
	(ctype_output, read_translit_entry): Call wcslen_uint32 instead
	of wcslen.
	(ctype_read): Use BITw and BIT instead of _ISwdigit and _ISdigit.
	(allocate_arrays): Call wcslen_uint32 instead of wcslen, wcscmp_uint32
	instead of wcscmp, and wmemcpy_uint32 instead of wmemcpy.
	* locale/programs/ld-time.c (time_finish): Initialize wt_fmt_ampm
	and wdate_fmt with constant uint32_t arrays instead of wide character
	strings.  Call wcschr_uint32 instead of wcschr.
	* locale/programs/linereader.c (get_string): Fix type of wide
	character buffer.
	* locale/programs/localedef.c (main): Don't call sysconf if
	NO_SYSCONF is defined.
	* locale/programs/locarchive.c (enlarge_archive): Avoid C99
	constructs.
	* locale/programs/locfile.c (add_locale_wstring): Call wcslen_uint32
	instead of wcslen.
	* locale/programs/locfile.h (wcslen_uint32, wmemcmp_uint32)
	(wcscmp_uint32, wmemcpy_uint32, wcschr_uint32): New functions.

2006-09-07  Richard Sandiford  <richard@codesourcery.com>

	* locale/programs/3level.h (TABLE): Remove "result" field.
	(TABLE,_finalize): Replace with...
	(add_locale_,TABLE): ...this new function.  Add data directly to a
	locale_file instead of building up a result block.
	* locale/programs/ld-address.c (address_output): Use the new
	locale_file interface.
	* locale/programs/ld-collate.c (obstack_int32_grow)
	(obstack_int32_grow_fast): Pass the value through maybe_swap_uint32.
	(collate_finish): Don't call collseq_table_finalize.
	(output_weightwc): Use maybe_swap_uint32_obstack to reorder the
	weights array.
	(collate_output): Likewise the wide collation string.  Don't call
	collidx_table_finalize.   Use the new locale_file interface.
	* locale/programs/ld-ctype.c (wcwidth_table, wctrans_table)
	(wctrans_table_add): Move definitions.
	(wctype_table): Likewise.  Remove "result" field.
	(locale_ctype_t): Make "class_3level" an array of wctype_tables,
	"map_3level" an array of wctrans_tables and "width" a wcwidth_table.
	(ctype_output): Hoist the setting of default_missing_len and reuse it
	in the DEFAULT_MISSING case.  Use the new locale_file interface.
	(wctype_finalize): Replace with...
	(add_locale_wctype_table): ...this new function.  Alter as for
	add_locale_TABLE above.
	(allocate_arrays): Adjust for new types of locale_ctype_t fields.
	Don't call wctype_table_finalize, wctrans_table_finalize or
	wcwidth_table_finalize.
	* locale/programs/ld-identification.c (identification_output): Use
	the new locale_file interface.
	* locale/programs/ld-measurement.c (measurement_output): Likewise.
	* locale/programs/ld-messages.c (messages_output): Likewise.
	* locale/programs/ld-monetary.c (monetary_output): Likewise.
	* locale/programs/ld-name.c (name_output): Likewise.
	* locale/programs/ld-numeric.c (numeric_output): Likewise.
	* locale/programs/ld-paper.c (paper_output): Likewise.
	* locale/programs/ld-telephone.c (telephone_output): Likewise.
	* locale/programs/ld-time.c (time_output): Likewise.
	* locale/programs/localedef.c (OPT_LITTLE_ENDIAN): Define.
	(OPT_BIG_ENDIAN): Define.
	(options): Add --big-endian and --little-endian.
	(parse_opt): Handle them.
	* locale/programs/locfile.c: Include assert.h, wchar.h and
	localeinfo.h.
	(obstack_chunk_alloc, obstack_chunk_free): Define.
	(swap_endianness_p, record_offset, init_locale_data, align_locale_data)
	(add_locale_empty, add_locale_raw_data, add_locale_raw_obstack)
	(add_locale_string, add_locale_wstring, add_locale_uint32)
	(add_locale_uint32_array, add_locale_char, start_locale_structure)
	(end_locale_structure, start_locale_prelude, end_locale_prelude): New.
	(write_locale_data): Replace iovec arguments with a locale_file.
	Build three iovecs internally, one for the header, one for the offsets
	array and one for the data itself.
	* locale/programs/locfile.h: Include obstack.h.
	(locale_file): Redefine as a file-building structure.
	(swap_endianness_p): Declare.
	(set_big_endian, swap_uint32, maybe_swap_uint32)
	(maybe_swap_uint32_array, maybe_swap_uint32_obstack): New functions.
	(init_locale_data, align_locale_data, add_locale_empty)
	(add_locale_raw_data, add_locale_raw_obstack, add_locale_string)
	(add_locale_wstring, add_locale_uint32, add_locale_uint32_array)
	(add_locale_char, start_locale_structure, end_locale_structure)
	(start_locale_prelude, end_locale_prelude): Declare.
	(write_locale_data): Adjust prototype as for locfile.c change.

2006-08-31  Mark Mitchell  <mark@codesourcery.com>
            Julian Brown  <julian@codesourcery.com>

	* Makefile (headers): Add bits/predefs.h.
	* include/features.h (__STDC_IEC_559__): Do not define.
	(__STDC_IEC_559_COMPLEX__): Likewise.
	(<bits/predefs.h>): Include.
	* bits/predefs.h: New file.

2006-08-26  Joseph Myers  <joseph@codesourcery.com>

	* io/test-lfs.c (do_prepare): Give name_len type size_t.
	* io/tst-fcntl.c (do_prepare): Likewise.
	* posix/tst-exec.c (do_prepare): Likewise.
	* posix/tst-preadwrite.c (do_prepare): Likewise.
	* posix/tst-spawn.c (do_prepare): Likewise.
	* posix/tst-truncate.c (do_prepare): Likewise.
	* rt/tst-aio.c (do_prepare): Likewise.
	* rt/tst-aio64.c (do_prepare): Likewise.
	* stdlib/test-canon2.c (do_prepare): Give test_dir_len type
	size_t.

2006-08-23  Joseph Myers  <joseph@codesourcery.com>

	* elf/dl-reloc.c (_dl_relocate_object): Do not try to allocate
	array using DT_PLTRELSZ if ELF_MACHINE_NO_PLT.

2006-08-23  Joseph S. Myers  <joseph@codesourcery.com>

	[BZ #2592]
	* math/libm-test.inc (lrint_test_tonearest): New.
	(lrint_test_towardzero): New.
	(lrint_test_downward): New.
	(lrint_test_upward): New.
	(main): Run these new tests.
	* sysdeps/ieee754/dbl-64/s_llrint.c (__llrint): Correct rounding
	of values near to 0.
	(two52): Use double not long double.
	* sysdeps/ieee754/dbl-64/s_lrint.c (__lrint): Likewise.
	* sysdeps/ieee754/flt-32/s_llrintf.c (__llrintf): Likewise.
	(two23): Use float not double.
	* sysdeps/ieee754/flt-32/s_lrintf.c (__lrintf): Likewise.
	(two23): Use float not double.
	* sysdeps/ieee754/ldbl-128/s_llrintl.c (__llrintl): Likewise.
	* sysdeps/ieee754/ldbl-128/s_lrintl.c (__lrintl): Likewise.
	* sysdeps/ieee754/ldbl-96/s_llrintl.c (__llrintl): Likewise.
	* sysdeps/ieee754/ldbl-96/s_lrintl.c (__lrintl): Likewise.

2006-08-23  Joseph Myers  <joseph@codesourcery.com>

	* soft-fp/quad.h (_FP_UNION_Q): Use _FP_W_TYPE for frac
	bit-fields.

2006-08-23  Joseph Myers  <joseph@codesourcery.com>

	* math/atest-exp.c (main): Cast hex value to mp_limb_t before
	shifting.
	* math/atest-exp2.c (read_mpn_hex): Likewise.
	* math/atest-sincos.c (main): Likewise.

2006-08-23  Joseph S. Myers  <joseph@codesourcery.com>

	* manual/arith.texi (fesetexceptflag): Use single line for
	@deftypefun.
	* manual/sysinfo.texi (sysctl): Likewise.
	* manual/errno.texi (error_print_progname): Remove space between
	"error_print_progname" and ")".


Local Variables:
change-log-default-name: "ChangeLog.eglibc"
End:
